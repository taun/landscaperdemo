//
//  FractalScapeIconSet.m
//  FractalScape
//
//  Created by Taun Chapman on 08/30/14.
//  Copyright (c) 2014 MOEDAE LLC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "FractalScapeIconSet.h"


@implementation FractalScapeIconSet

#pragma mark Cache

static UIImage* _imageOfTabBarLineColorIcon = nil;
static UIImage* _imageOfTabBarFillColorIcon = nil;
static UIImage* _imageOfTabBarLinePropertiesIcon = nil;
static UIImage* _imageOfTabBarRulesIcon = nil;
static UIImage* _imageOfToolBarCopyIcon = nil;
static UIImage* _imageOfKBIconRuleF = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawTabBarLineColorIcon;
{

    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4.5, 8.5, 16, 16)];
    [UIColor.whiteColor setStroke];
    oval3Path.lineWidth = 1;
    [oval3Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 0.5, 16, 16)];
    [UIColor.whiteColor setStroke];
    ovalPath.lineWidth = 1;
    [ovalPath stroke];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(8.5, 0.5, 16, 16)];
    [UIColor.whiteColor setStroke];
    oval2Path.lineWidth = 1;
    [oval2Path stroke];
}

+ (void)drawTabBarFillColorIcon;
{
    //// Color Declarations
    UIColor* white70 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.692];
    UIColor* white40 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.367];

    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(8.5, 0.5, 16, 16)];
    [white40 setFill];
    [oval2Path fill];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 0.5, 16, 16)];
    [UIColor.whiteColor setFill];
    [ovalPath fill];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(4.5, 8.5, 16, 16)];
    [white70 setFill];
    [oval3Path fill];
}

+ (void)drawTabBarLinePropertiesIcon;
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(1, 7.5, 16.5, 4) byRoundingCorners: UIRectCornerTopLeft | UIRectCornerBottomLeft cornerRadii: CGSizeMake(2, 2)];
    [rectanglePath closePath];
    [UIColor.whiteColor setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];


    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(13, 15, 12, 3) byRoundingCorners: UIRectCornerTopRight | UIRectCornerBottomRight cornerRadii: CGSizeMake(1, 1)];
    [rectangle2Path closePath];
    [UIColor.whiteColor setFill];
    [rectangle2Path fill];
}

+ (void)drawTabBarRulesIcon;
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(1.5, 2, 3, 20.5) cornerRadius: 1.5];
    [UIColor.whiteColor setStroke];
    rectanglePath.lineWidth = 1;
    [rectanglePath stroke];


    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(17.46, 2.46)];
    [bezierPath addCurveToPoint: CGPointMake(18.23, 3.57) controlPoint1: CGPointMake(17.74, 2.71) controlPoint2: CGPointMake(17.9, 3)];
    [bezierPath addLineToPoint: CGPointMake(23.1, 12)];
    [bezierPath addCurveToPoint: CGPointMake(18.63, 19.85) controlPoint1: CGPointMake(23.1, 12.11) controlPoint2: CGPointMake(18.63, 19.85)];
    [bezierPath addCurveToPoint: CGPointMake(17.5, 21.6) controlPoint1: CGPointMake(17.9, 21.11) controlPoint2: CGPointMake(17.74, 21.4)];
    [bezierPath addCurveToPoint: CGPointMake(15.86, 21.79) controlPoint1: CGPointMake(17.01, 22.03) controlPoint2: CGPointMake(16.37, 22.08)];
    [bezierPath addCurveToPoint: CGPointMake(15.06, 20.26) controlPoint1: CGPointMake(15.23, 21.42) controlPoint2: CGPointMake(14.95, 20.84)];
    [bezierPath addCurveToPoint: CGPointMake(15.63, 19.04) controlPoint1: CGPointMake(15.14, 19.9) controlPoint2: CGPointMake(15.3, 19.61)];
    [bezierPath addCurveToPoint: CGPointMake(19.67, 12.05) controlPoint1: CGPointMake(15.63, 19.04) controlPoint2: CGPointMake(18.27, 14.46)];
    [bezierPath addCurveToPoint: CGPointMake(18.97, 10.85) controlPoint1: CGPointMake(19.31, 11.44) controlPoint2: CGPointMake(18.97, 10.85)];
    [bezierPath addCurveToPoint: CGPointMake(15.07, 3.9) controlPoint1: CGPointMake(15.3, 4.5) controlPoint2: CGPointMake(15.14, 4.21)];
    [bezierPath addCurveToPoint: CGPointMake(15.73, 2.4) controlPoint1: CGPointMake(14.95, 3.27) controlPoint2: CGPointMake(15.23, 2.69)];
    [bezierPath addCurveToPoint: CGPointMake(17.46, 2.46) controlPoint1: CGPointMake(16.37, 2.03) controlPoint2: CGPointMake(17.01, 2.08)];
    [bezierPath closePath];
    [UIColor.whiteColor setStroke];
    bezierPath.lineWidth = 1;
    [bezierPath stroke];
}

+ (void)drawToolBarCopyIcon;
{
    //// Color Declarations
    UIColor* white70 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.692];

    //// Bezier Drawing
    UIBezierPath* bezierPath = UIBezierPath.bezierPath;
    [bezierPath moveToPoint: CGPointMake(9.77, 24)];
    [bezierPath addLineToPoint: CGPointMake(0.62, 24)];
    [bezierPath addLineToPoint: CGPointMake(0, 24)];
    [bezierPath addLineToPoint: CGPointMake(0, 23.38)];
    [bezierPath addLineToPoint: CGPointMake(0, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(0, 4)];
    [bezierPath addLineToPoint: CGPointMake(0.62, 4)];
    [bezierPath addLineToPoint: CGPointMake(15.38, 4)];
    [bezierPath addLineToPoint: CGPointMake(16, 4)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(15.38, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addCurveToPoint: CGPointMake(16, 4.63) controlPoint1: CGPointMake(16, 4.62) controlPoint2: CGPointMake(16, 4.62)];
    [bezierPath addCurveToPoint: CGPointMake(16, 4.65) controlPoint1: CGPointMake(16, 4.64) controlPoint2: CGPointMake(16, 4.64)];
    [bezierPath addCurveToPoint: CGPointMake(16, 4.75) controlPoint1: CGPointMake(16, 4.69) controlPoint2: CGPointMake(16, 4.69)];
    [bezierPath addCurveToPoint: CGPointMake(16, 5.12) controlPoint1: CGPointMake(16, 4.9) controlPoint2: CGPointMake(16, 4.9)];
    [bezierPath addCurveToPoint: CGPointMake(16, 6.48) controlPoint1: CGPointMake(16, 5.68) controlPoint2: CGPointMake(16, 5.68)];
    [bezierPath addCurveToPoint: CGPointMake(16, 6.77) controlPoint1: CGPointMake(16, 8.38) controlPoint2: CGPointMake(16, 4.38)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 6.77)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 6.48) controlPoint1: CGPointMake(14.77, 4.38) controlPoint2: CGPointMake(14.77, 8.38)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 5.12) controlPoint1: CGPointMake(14.77, 5.68) controlPoint2: CGPointMake(14.77, 5.68)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 4.75) controlPoint1: CGPointMake(14.77, 4.9) controlPoint2: CGPointMake(14.77, 4.9)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 4.65) controlPoint1: CGPointMake(14.77, 4.69) controlPoint2: CGPointMake(14.77, 4.69)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 4.63) controlPoint1: CGPointMake(14.77, 4.64) controlPoint2: CGPointMake(14.77, 4.64)];
    [bezierPath addCurveToPoint: CGPointMake(14.77, 4.62) controlPoint1: CGPointMake(14.77, 4.62) controlPoint2: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(16, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(14.77, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(15.38, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(15.38, 5.23)];
    [bezierPath addLineToPoint: CGPointMake(0.62, 5.23)];
    [bezierPath addLineToPoint: CGPointMake(1.23, 4.62)];
    [bezierPath addLineToPoint: CGPointMake(1.23, 23.38)];
    [bezierPath addLineToPoint: CGPointMake(0.62, 22.77)];
    [bezierPath addLineToPoint: CGPointMake(9.77, 22.77)];
    [UIColor.whiteColor setFill];
    [bezierPath fill];


    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(12.5, 9.5, 15, 18)];
    [UIColor.whiteColor setStroke];
    rectangle2Path.lineWidth = 1;
    [rectangle2Path stroke];


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(6, 13, 4, 4)];
    [white70 setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(18, 16, 4, 4)];
    [UIColor.whiteColor setFill];
    [oval2Path fill];
}

+ (void)drawKBIconRuleF;
{
}

#pragma mark Generated Images

+ (UIImage*)imageOfTabBarLineColorIcon;
{
    if (_imageOfTabBarLineColorIcon)
        return _imageOfTabBarLineColorIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(25, 25), NO, 0.0f);
    [FractalScapeIconSet drawTabBarLineColorIcon];
    _imageOfTabBarLineColorIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfTabBarLineColorIcon;
}

+ (UIImage*)imageOfTabBarFillColorIcon;
{
    if (_imageOfTabBarFillColorIcon)
        return _imageOfTabBarFillColorIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(25, 25), NO, 0.0f);
    [FractalScapeIconSet drawTabBarFillColorIcon];
    _imageOfTabBarFillColorIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfTabBarFillColorIcon;
}

+ (UIImage*)imageOfTabBarLinePropertiesIcon;
{
    if (_imageOfTabBarLinePropertiesIcon)
        return _imageOfTabBarLinePropertiesIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(25, 25), NO, 0.0f);
    [FractalScapeIconSet drawTabBarLinePropertiesIcon];
    _imageOfTabBarLinePropertiesIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTabBarLinePropertiesIcon;
}

+ (UIImage*)imageOfTabBarRulesIcon;
{
    if (_imageOfTabBarRulesIcon)
        return _imageOfTabBarRulesIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(25, 25), NO, 0.0f);
    [FractalScapeIconSet drawTabBarRulesIcon];
    _imageOfTabBarRulesIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfTabBarRulesIcon;
}

+ (UIImage*)imageOfToolBarCopyIcon;
{
    if (_imageOfToolBarCopyIcon)
        return _imageOfToolBarCopyIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(28, 28), NO, 0.0f);
    [FractalScapeIconSet drawToolBarCopyIcon];
    _imageOfToolBarCopyIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfToolBarCopyIcon;
}

+ (UIImage*)imageOfKBIconRuleF;
{
    if (_imageOfKBIconRuleF)
        return _imageOfKBIconRuleF;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), NO, 0.0f);
    [FractalScapeIconSet drawKBIconRuleF];
    _imageOfKBIconRuleF = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfKBIconRuleF;
}

#pragma mark Customization Infrastructure

- (void)setTabBarLineColorIconTargets: (NSArray*)tabBarLineColorIconTargets
{
    _tabBarLineColorIconTargets = tabBarLineColorIconTargets;

    for (id target in self.tabBarLineColorIconTargets)
        [target setImage: FractalScapeIconSet.imageOfTabBarLineColorIcon];
}

- (void)setTabBarFillColorIconTargets: (NSArray*)tabBarFillColorIconTargets
{
    _tabBarFillColorIconTargets = tabBarFillColorIconTargets;

    for (id target in self.tabBarFillColorIconTargets)
        [target setImage: FractalScapeIconSet.imageOfTabBarFillColorIcon];
}

- (void)setTabBarLinePropertiesIconTargets: (NSArray*)tabBarLinePropertiesIconTargets
{
    _tabBarLinePropertiesIconTargets = tabBarLinePropertiesIconTargets;

    for (id target in self.tabBarLinePropertiesIconTargets)
        [target setImage: FractalScapeIconSet.imageOfTabBarLinePropertiesIcon];
}

- (void)setTabBarRulesIconTargets: (NSArray*)tabBarRulesIconTargets
{
    _tabBarRulesIconTargets = tabBarRulesIconTargets;

    for (id target in self.tabBarRulesIconTargets)
        [target setImage: FractalScapeIconSet.imageOfTabBarRulesIcon];
}

- (void)setToolBarCopyIconTargets: (NSArray*)toolBarCopyIconTargets
{
    _toolBarCopyIconTargets = toolBarCopyIconTargets;

    for (id target in self.toolBarCopyIconTargets)
        [target setImage: FractalScapeIconSet.imageOfToolBarCopyIcon];
}

- (void)setKBIconRuleFTargets: (NSArray*)kBIconRuleFTargets
{
    _kBIconRuleFTargets = kBIconRuleFTargets;

    for (id target in self.kBIconRuleFTargets)
        [target setImage: FractalScapeIconSet.imageOfKBIconRuleF];
}


@end
